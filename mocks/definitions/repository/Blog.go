// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	model "go-api/definitions/model"

	mock "github.com/stretchr/testify/mock"
)

// Blog is an autogenerated mock type for the Blog type
type Blog struct {
	mock.Mock
}

// Create provides a mock function with given fields: _a0
func (_m *Blog) Create(_a0 *model.Blog) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(*model.Blog) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Delete provides a mock function with given fields: _a0
func (_m *Blog) Delete(_a0 *model.Blog) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(*model.Blog) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// List provides a mock function with given fields: models, filter
func (_m *Blog) List(models *[]model.Blog, filter model.BlogFilter) error {
	ret := _m.Called(models, filter)

	var r0 error
	if rf, ok := ret.Get(0).(func(*[]model.Blog, model.BlogFilter) error); ok {
		r0 = rf(models, filter)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Update provides a mock function with given fields: _a0
func (_m *Blog) Update(_a0 *model.Blog) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(*model.Blog) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewBlog interface {
	mock.TestingT
	Cleanup(func())
}

// NewBlog creates a new instance of Blog. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewBlog(t mockConstructorTestingTNewBlog) *Blog {
	mock := &Blog{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
