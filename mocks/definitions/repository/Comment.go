// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	model "go-api/definitions/model"

	mock "github.com/stretchr/testify/mock"
)

// Comment is an autogenerated mock type for the Comment type
type Comment struct {
	mock.Mock
}

// List provides a mock function with given fields: models, filter
func (_m *Comment) List(models *[]model.Comment, filter model.CommentFilter) error {
	ret := _m.Called(models, filter)

	var r0 error
	if rf, ok := ret.Get(0).(func(*[]model.Comment, model.CommentFilter) error); ok {
		r0 = rf(models, filter)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewComment interface {
	mock.TestingT
	Cleanup(func())
}

// NewComment creates a new instance of Comment. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewComment(t mockConstructorTestingTNewComment) *Comment {
	mock := &Comment{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
